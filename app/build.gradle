import java.security.InvalidKeyException

apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.cocos.bcx_wallet"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions 'default'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        debug {
            try {
                storeFile file('C\\:\\\\Users\\\\Administrator\\\\Desktop\\\\cocos_bcx.jks')
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
            } catch (ex) {
                throw new InvalidKeyException("You should define RELEASE_STORE_PASSWORD and RELEASE_KEY_PASSWORD in gradle.properties.")
            }
        }

        release {
            try {
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
            } catch (ex) {
                throw new InvalidKeyException("You should define RELEASE_STORE_PASSWORD and RELEASE_KEY_PASSWORD in gradle.properties.")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField 'boolean', 'IS_TEST_ENV', 'false'
            buildConfigField 'String', 'API_BASE', '"https://api.cocosbcx.net/backend/"'
            buildConfigField 'String', 'COCOS_PRICE_BASE', '"http://fxhapi.feixiaohao.com/public/"'
            buildConfigField 'String', 'EXCHANGE_CURRENCY', '"http://op.juhe.cn/onebox/exchange/"'
            buildConfigField 'String', 'DOWN_LOAD_URL', '"https://cocosbcx.oss-cn-beijing.aliyuncs.com"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            buildConfigField 'boolean', 'IS_TEST_ENV', 'true'
            buildConfigField 'String', 'API_BASE', '"https://api.cocosbcx.net/backend/"'
            buildConfigField 'String', 'DOWN_LOAD_URL', '"https://cocosbcx.oss-cn-beijing.aliyuncs.com"'
            buildConfigField 'String', 'COCOS_PRICE_BASE', '"http://fxhapi.feixiaohao.com/public/"'
            buildConfigField 'String', 'EXCHANGE_CURRENCY', '"http://op.juhe.cn/onebox/exchange/"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    //开启DataBinding
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':module_asset')
    implementation project(':module_found')
    implementation project(':module_login')
    implementation project(':module_mine')
    implementation project(':library_base')
    implementation project(':module_zxing')

    annotationProcessor rootProject.ext.dependencies["arouter-annotationProcessor"]
}
